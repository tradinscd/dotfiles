#!/bin/bash

# This is my solution to efficient playlist navigation in mpv. It makes use of ranger to add files to the playlist, and vim
# to rearrange items on the list.
#
# WHAT THIS DOES:
# This is the default mpv command for my rifle.conf. This allows me to take any number of selected videos from ranger and
# directly append them to this playlist. This solves the dilemma of trying to add files to a playlist within a non-GUI,
# non-slaved video player. It's even faster than GUI's because you're adding everything via ranger keybinds (!).
#
# I can then rearrange the playlist (add, remove, reorder, "save as") by directly editing the playlist file; an
# autocommand set in vim reloads the playlist on exit. That's it!
#
# WHAT ISN'T PERFECT:
# * You can't keep any videos in the playlist up to your currently playing file. Your currently playing file will also not
# show in the playlist editor, although it's technically the first item in the list.
# * If you add the currently playing file into the playlist, it removes everything up to and including it. This solves the
# dilemma of reloading the playlist without appending the currently playing file again, but it also means you can't add
# another instance of the currently playing file later on in the playlist.

playlist="~/.mpv/playlist"
file="~/bin/notme/now-playing-mpv"
unregexfile=$(sed -e 's/[]\/()$*.^|[]/\\&/g' <<< $file)

pgrep mpv
# If mpv isn't running.
if [ $? -ne 0 ]; then
    # Pause mpd, e.g., if I open mpv while mpd is still playing.
    ncmpcpp pause
    # Place all arguments into new playlist.
    rm ~/.mpv/playlist
    for i in "$@"; do
        echo "$i" >> $playlist
    done
    # Play mpv off that playlist.
    mpv --playlist $playlist
# If mpv is running.
else
    # Append all arguments into current playlist.
    for i in "$@"; do
        echo "$i" >> $playlist
    done
    # If currently playing file exists in playlist.
    if [ $(grep -F "$file" $playlist | wc -l) -ne 0 ]; then
        # Remove all lines up to and including the first occurrence of the currently playing filename.
        sed -i "0,/$unregexfile/d" $playlist
    fi
    # Reload playlist by clearing it, then appending all files from the newly modified list.
    echo "playlist_clear" > ~/bin/config/mpv-control
    echo 'loadlist "/home/nil/.mpv/playlist" append' > ~/bin/config/mpv-control
    echo 'show_text "Playlist updated."' > ~/bin/config/mpv-control
fi

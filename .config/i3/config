#
# i3 dotfile
# ~/.config/i3/config
# Name: nil
#
# Bugs/To-Do {{{

# firefox gets weird block to the right on occasion.
# gvim has a funny bottom and right margin.
# when i open some terminal apps, like 'l devices' it doesn't open in the workspace that I initialized it in, but rather the workspace I'm currently in.

# Wishlist:
# Have workspaces alphabetically ordered (or customizable order). Right now it can
#   only order if the workspaces are prepended by a #.

# }}}
# Startup Applications {{{
# -----------------------------------------------------------------------------

exec i3-msg 'workspace β; exec firefox; workspace α' &
exec urxvt -name nil -g 85x24 &
exec urxvt -name irssi -g 124x33 -e irssi &
exec urxvt -name rtorrent -g 110x30 -e rtorrent &
exec urxvt -name ncmpcpp -g 90x25 -e ncmpcpp &
exec dropboxd &
exec rssdler -d &

# }}}
# Windows {{{
# -----------------------------------------------------------------------------

# Set modifier key.
set $mod Mod1
set $mod2 Mod4

# Window border style.
new_window none
new_float none

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Kill focused window.
bindsym $mod+d kill

# Change container layout.
# One toggles splitv/splith, and the other toggles stacking/tabbed.
bindsym $mod+e layout toggle split
bindsym $mod+s exec bash ~/.config/nil/i3-container-toggle

# Toggle tiling/floating for focused window.
bindsym $mod+Shift+space floating toggle

# Change focus between tiling/floating windows.
bindsym $mod+space focus mode_toggle

# Enter fullscreen mode for focused container.
bindsym $mod+Shift+f fullscreen

# Resize window mode. (you can also use the mouse for that).
mode "resize" {
    # h/j will +/- the window's width, k/l will +/- the window's height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # Allow movement of window as well during the mode.
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Font & Colors for window titles.
# Class                 border  Backgr. Text    Indicator
client.focused          #DCDCDC #DCDCDC #000000 #2e9ef4
client.focused_inactive #DCDCDC #DCDCDC #000000 #484e50
client.unfocused        #F0F0F0 #F0F0F0 #000000 #292d2e
client.urgent           #2f343a #900000 #ffffff #900000
font pango:HelveticaNeueCom 45 Lt 8

# }}}
# Focusing & Config Loading {{{
# -----------------------------------------------------------------------------

# Change focus commands.
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window.
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Split in horizontal orientation.
bindsym $mod+x split h

# Split in vertical orientation.
bindsym $mod+v split v

# Reload the configuration file, Restart i3 inplace (preserves layout/session).
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

# }}}
# Workspaces {{{
# -----------------------------------------------------------------------------

# Greek alphabet.
# Other stylistic choices: dice, chinese/japanese/etc.
# Switch to workspace.
bindsym $mod+1 workspace α
bindsym $mod+2 workspace β
bindsym $mod+3 workspace γ
bindsym $mod+4 workspace δ
bindsym $mod+5 workspace ε
bindsym $mod+6 workspace ζ
bindsym $mod+7 workspace η
bindsym $mod+8 workspace θ
bindsym $mod+9 workspace ι
bindsym $mod+0 workspace κ
bindsym $mod2+1 workspace λ
bindsym $mod2+2 workspace μ
bindsym $mod2+3 workspace ν
bindsym $mod2+4 workspace ξ
bindsym $mod2+5 workspace ο
bindsym $mod2+6 workspace π
bindsym $mod2+7 workspace ρ
bindsym $mod2+8 workspace σ
bindsym $mod2+9 workspace τ
bindsym $mod2+0 workspace υ

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace α
bindsym $mod+Shift+2 move container to workspace β
bindsym $mod+Shift+3 move container to workspace γ
bindsym $mod+Shift+4 move container to workspace δ
bindsym $mod+Shift+5 move container to workspace ε
bindsym $mod+Shift+6 move container to workspace ζ
bindsym $mod+Shift+7 move container to workspace η
bindsym $mod+Shift+8 move container to workspace θ
bindsym $mod+Shift+9 move container to workspace ι
bindsym $mod+Shift+0 move container to workspace κ
bindsym $mod2+Shift+1 move container to workspace λ
bindsym $mod2+Shift+2 move container to workspace μ
bindsym $mod2+Shift+3 move container to workspace ν
bindsym $mod2+Shift+4 move container to workspace ξ
bindsym $mod2+Shift+5 move container to workspace ο
bindsym $mod2+Shift+6 move container to workspace π
bindsym $mod2+Shift+7 move container to workspace ρ
bindsym $mod2+Shift+8 move container to workspace σ
bindsym $mod2+Shift+9 move container to workspace τ
bindsym $mod2+Shift+0 move container to workspace υ

# Force a consistent workspace # layout, so I can move it to that workspace without wondering whether it went to the right monitor.
workspace α output LVDS1
workspace β output LVDS1
workspace γ output LVDS1
workspace δ output LVDS1
workspace ε output LVDS1
workspace ζ output LVDS1
workspace η output LVDS1
workspace θ output LVDS1
workspace ι output LVDS1
workspace κ output LVDS1
workspace λ output HDMI1
workspace μ output HDMI1
workspace ν output HDMI1
workspace ξ output HDMI1
workspace ο output HDMI1
workspace π output HDMI1
workspace ρ output HDMI1
workspace σ output HDMI1
workspace τ output HDMI1
workspace υ output HDMI1

# }}}
# Panel {{{
# -----------------------------------------------------------------------------
# There's currently no way to get workspaces working into dzen2. Apparently there /was/ a method via i3-wsbar, but it's now depecrated and impossible to find in order to install. As a result, the best you can work with is conky piped into i3bar instead of dzen2. This is a game changer. I'll eventually switch out of i3 for a better functioning and aesthetic panel.
# What dzen2 can do that i3bar can't:
# * Different formatting for Conky, e.g., separate font/font sizes.
# * Icons/anything non-UTF8.
# * Center alignment.
# Archived:
# conky | dzen2 -dock -ta c -fg '#000000' -bg '#F0F0F0' -fn 'HelveticaNeueCom 45 Lt-9' &

# Preferences currently:
# Better-rendered greek symbols, without bold (without unbolding Conky), and/or icon-d workspaces.
# Hover/keybind-toggle widget displays and icon widgets as your notifications (irssi, gmail, rtorrent, skype).
#   * Dropdown calendar/clock below timestamp (take one of earsplits calendar widgets and change the mouseover condition to a keybind).
#   * Gmail notifier: Gmail widget icon appearing when I have unread email, with a circled red number appearing in a corner of the icon to represent # of unread, dropdown into a mini-preview of unread mails, and clickable/keybindable 'read/spam/open/reply' on them from there (like with chrome).

bar {
    colors {
    background #F0F0F0
    #colorclass         border  backgr  text
    focused_workspace   #DCDCDC #DCDCDC #000000
    active_workspace    #DCDCDC #DCDCDC #000000
    inactive_workspace  #F0F0F0 #F0F0F0 #000000
    urgent_workspace    #2f343a #900000 #ffffff
    }
    position top
    font pango:HelveticaNeueCom 45 Lt Bold 9
    tray_output none
    colors { statusline #000000 }
    status_command conky
}

# }}}
# Application Settings {{{
# -----------------------------------------------------------------------------

# Force floating on all pop-up windows, e.g., browser pop-ups.
for_window [window_role="pop-up"] floating enable
# Force specifically some Firefox windows.
for_window [title="^Library$"] floating enable
for_window [title="^Firefox Preferences$"] floating enable
for_window [title="^Options for Menu Editor$"] floating enable
for_window [title="^Tab Mix Plus Options$"] floating enable

# A desultory, haphazard method for a calendar "dropdown".
for_window [class="^URxvt$" instance="^calendar$"] floating enable move up 315px
bindsym $mod+c exec bash ~/.config/nil/calendar-toggle

# Autoassign specific applications to a workspace.
# For mplayer and mplayer2/smplayer respectively.
#assign [class="MPlayer"] λ
assign [class="mplayer"] λ
assign [class="Zathura"] λ
# Automove to workspace after it opens them.
for_window [class="mplayer"] workspace λ
for_window [class="Zathura"] workspace λ

# Shortcut Applications.
# $mod,$mod+a,z are available, as well as all mod2 (super).
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+q exec firefox
bindsym $mod+f exec urxvt -e ranger
bindsym $mod+w exec gvim

# Media Keys.
# Learn more about mplayer before you try this one.
#bindsym F6 exec play pause
# Here's the thing: PCM affects HDMI, Master affects Analog. Neither volume affects the other, so I normalized with percentages instead of decibels so they reach 0-100 at the same intervals. So I'll just go with both 0's as consistency for now.
# What I would like: to switch audios on hotplug without requiring restart applications, and distinct volumes on each, whilst still allowing for just three buttons.
bindsym F9 exec amixer set Master 2%- unmute | amixer set PCM 2%- unmute
bindsym F10 exec amixer set Master 2%+ unmute | amixer set PCM 2%+ unmute
bindsym F11 exec amixer set Master toggle | amixer set IEC958 toggle

# }}}
# Scratchpads {{{
# -----------------------------------------------------------------------------
# These are applications I always leave running on my computer, and for which I only need to take a quick peek once in a while to do something on them. They also generally feel much nicer to use in compact floating windows, rather than the pervasive array of space if you just place them into their own workspace (which somehow makes me feel even less productive).
# To use multiple scratchpads, there's sort of a trick required in i3, since once you show two open scratchpad applications simultaneously, all hell breaks loose. To get around this without requiring more keybindings, you need to make your commands leave all other applications hidden in the scratchpad /before/ you show your next scratchpad application. There's yet another caveat: to use the for_window command to automove applications into the scratchpad, you have to be super-specific so that not even its child popup windows will be subsumed under the scratchpad (e.g. settings windows).

for_window [class="^URxvt$" instance="^irssi$"] move scratchpad
for_window [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad
for_window [class="^URxvt$" instance="^rtorrent$"] move scratchpad
for_window [class="^URxvt$" instance="^nil$"] move scratchpad

bindsym $mod+g [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^rtorrent$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^irssi$"] scratchpad show
bindsym $mod+b [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^rtorrent$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] scratchpad show
bindsym $mod+y [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^rtorrent$"] scratchpad show
bindsym $mod+t [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^rtorrent$"] move scratchpad, [instance="^nil$"] scratchpad show

# vim:filetype=i3
# }}}

#
# i3 dotfile
# ~/.config/i3/config
# Name: nil
#
# Comments {{{

# My Work Method:
# For frequently used applications, I float them, often because they don't need to take the entire screen nor does it look pretty (particularly on my 27'' display). In fact, that becomes counter-intuitive to the tiling WM philosophy, since while you're using the full screen for an application, you could more effectively use that unneeded space for another application (much like how I orient my floating windows).
# When I don't have time to play with floating (e.g. during real math work), I use the tiles mainly with 3 programs: firefox, zathura, and gvim (also ranger on occasion).

# To-Do:
# different keybinds and aliases for whether i want to float certain applications (like ranger, firefox--particularly for huge 27'' 1440p monitors) and at what location of the screen it's placed in (.e.g the top right-ish , etc. by doing app cmd && i3-msg 'move the shit up')
# When restarting, the nondocked dzen2's get overlapped and are hidden.
# Set all firefox popups to float more generally, rather than needing to xprop each individually.
# firefox gets weird block to the right on occasion.
# when I open select applications that have a popup beforehand, the real application opens up not at the workspace I initalized the command but at the workspace I'm currently at (e.g. libreoffice, gimp)
#   read up on no-startup-id.
# dzen2 in center has weird flickering when moving workspaces in laptop rapidly, while HDMI is in fullscreen on mpv

# Wishlist:
#   * Right-click desktop with options.
#   * When changing workspaces and back, the w3m image preview in ranger is gone.
# Panel/Workspaces:
#   * Non-# order, e.g., alphabetical or customizable.
#   * Icon/non-UTF name support.
#   * Can't add a black outline to it.
#   * Don't overlap the dzen2's on new i3-session.
# Windows:
#   * Ability to not use borders on non-floating windows, but keep them for manually made floating windows. (And
#       also a keybind to be able to toggle that border.)
#   * More instantaneous mouse-over-window focus, rather than moving further into the window.
#   * When focusing an application and there are multiple hits for that string, cycle among them; don't just stick with the first result.
# - Floating:
#   * Absolute positioning based off workspace, not pixels and monitor alignment.
#       for_window [class=asdf] move absolute position 4000 px 300 px works, but is not nice for dynamic monitor management, e.g., if I switch to just the laptop instead of a dual screen setup.
#   * Move between floating windows with hjkl, not just a (counter)clockwise cycle through hl.
#       * As a subset, this means I can't move to the next monitor with hl.
#   * Shadowed outlines.
# - Don't need these any longer, but keeping for documentation:
#   * Independent scratchpads, e.g., ability to have multiple overlayed on each other and still
#       can toggle hide them all away (can only do one at a time currently).
#   * Ability to hide/close floating window on loss of focus (for better use of some scratchpad
#       windows, like scratchpad terminals).
#   * True transparency, e.g., just slightly for terminal scratchpads.

# }}}
# Startup Applications {{{
# -----------------------------------------------------------------------------

# I can't get separate text alignments to work out in conky, so I'm splitting dzen into 3: L, M, and R; with 2 different conkyrcs. This is clearly resolution-specific, and will need configuring for HDMI/monitor hotplugs.
# HDMI Display
exec conky -c ~/.config/nil/.conkyrc | dzen2 -w 400 -x 760 -y 4 -ta c -fg '#000000' -bg '#ffffff' -fn 'lime'
#exec conky -c ~/.config/nil/.conkyrightrc | dzen2 -w 400 -x 1520 -y 4 -ta r -fg '#000000' -bg '#ffffff' -fn 'lime'
# LVDS Display
exec conky -c ~/.config/nil/.conkyrc | dzen2 -w 200 -x 583 -y 4 -ta c -fg '#000000' -bg '#ffffff' -fn 'lime' -xs 1
exec conky -c ~/.config/nil/.conkyrightrc | dzen2 -w 400 -x 966 -y 4 -ta r -fg '#000000' -bg '#ffffff' -fn 'lime' -xs 1

exec i3-msg 'workspace β; exec firefox; workspace α' &
exec urxvt -name nil -g 85x24 &
exec urxvt -name irssi -g 124x33 -e irssi &
exec urxvt -name ncmpcpp -g 95x25 -e ncmpcpp &
exec urxvt -name ranger -g 90x27 -e ranger &
exec urxvt -name tcli -g 90x27 -e ~/.config/nil/nil-transmission-remote-cli &
exec gvim &
exec dropboxd &
exec rssdler -d &
# I tried applying both of these commands in xinitrc with no luck, yet here it works.
exec transmission-daemon &
exec mpdas &

# }}}
# Windows {{{
# -----------------------------------------------------------------------------

# Set modifier key.
set $mod Mod1
set $mod2 Mod4

# Mouse left-click drag to move, right-click drag to resize.
floating_modifier $mod

# Kill focused window.
bindsym $mod+d kill

# Change container layout.
# One toggles splitv/splith, and the other toggles stacking/tabbed.
bindsym $mod+e layout toggle split
bindsym $mod+s exec bash ~/.config/nil/i3-container-toggle

# Split in horizontal/vertical orientation.
bindsym $mod+x split h
bindsym $mod+v split v

# Toggle tiling/floating for focused window.
bindsym $mod+Shift+space floating toggle

# Change focus between tiling/floating windows.
bindsym $mod+space focus mode_toggle

# Enter fullscreen mode for focused container.
bindsym $mod+Shift+f fullscreen

# Resize window mode.
mode "resize" {
    # h/j will +/- the window's width, k/l will +/- the window's height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # Allow movement of window as well during the mode.
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Window border style.
#new_window none
#new_float none
new_float pixel 5
new_window pixel 5

# Font & Colors for window titles.
# Class                 border  Backgr. Text    Indicator
client.focused          #000000 #2f4f4f #000000 #2f4f4f
client.focused_inactive #000000 #000000 #000000 #484e50
client.unfocused        #000000 #000000 #000000 #292d2e
client.urgent           #2f343a #900000 #ffffff #900000
font pango:HelveticaNeueCom 45 Lt 8

# }}}
# Focusing & Config Loading {{{
# -----------------------------------------------------------------------------

# Change focus commands.
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window.
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Reload the configuration file, Restart i3 inplace (preserves layout/session).
bindsym $mod+Shift+c reload
# Be wary. This one ruins dzen2 and for_window positions.
bindsym $mod+Shift+r restart

# }}}
# Workspaces {{{
# -----------------------------------------------------------------------------

# Greek alphabet.
# Other stylistic choices: dice, chinese/japanese/etc.
# Switch to workspace.
bindsym $mod+1 workspace α
bindsym $mod+2 workspace β
bindsym $mod+3 workspace γ
bindsym $mod+4 workspace δ
bindsym $mod+5 workspace ε
bindsym $mod+6 workspace ζ
bindsym $mod+7 workspace η
bindsym $mod+8 workspace θ
bindsym $mod+9 workspace ι
bindsym $mod+0 workspace κ
bindsym $mod2+1 workspace λ
bindsym $mod2+2 workspace μ
bindsym $mod2+3 workspace ν
bindsym $mod2+4 workspace ξ
bindsym $mod2+5 workspace ο
bindsym $mod2+6 workspace π
bindsym $mod2+7 workspace ρ
bindsym $mod2+8 workspace σ
bindsym $mod2+9 workspace τ
bindsym $mod2+0 workspace υ

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace α
bindsym $mod+Shift+2 move container to workspace β
bindsym $mod+Shift+3 move container to workspace γ
bindsym $mod+Shift+4 move container to workspace δ
bindsym $mod+Shift+5 move container to workspace ε
bindsym $mod+Shift+6 move container to workspace ζ
bindsym $mod+Shift+7 move container to workspace η
bindsym $mod+Shift+8 move container to workspace θ
bindsym $mod+Shift+9 move container to workspace ι
bindsym $mod+Shift+0 move container to workspace κ
bindsym $mod2+Shift+1 move container to workspace λ
bindsym $mod2+Shift+2 move container to workspace μ
bindsym $mod2+Shift+3 move container to workspace ν
bindsym $mod2+Shift+4 move container to workspace ξ
bindsym $mod2+Shift+5 move container to workspace ο
bindsym $mod2+Shift+6 move container to workspace π
bindsym $mod2+Shift+7 move container to workspace ρ
bindsym $mod2+Shift+8 move container to workspace σ
bindsym $mod2+Shift+9 move container to workspace τ
bindsym $mod2+Shift+0 move container to workspace υ

# Force a consistent workspace # layout, so I can move it to that workspace without wondering whether it went to the right monitor.
# I prefer this (dynamic tag creation plugin of Awesome) over default i3.
workspace α output LVDS1
workspace β output LVDS1
workspace γ output LVDS1
workspace δ output LVDS1
workspace ε output LVDS1
workspace ζ output LVDS1
workspace η output LVDS1
workspace θ output LVDS1
workspace ι output LVDS1
workspace κ output LVDS1
workspace λ output HDMI1
workspace μ output HDMI1
workspace ν output HDMI1
workspace ξ output HDMI1
workspace ο output HDMI1
workspace π output HDMI1
workspace ρ output HDMI1
workspace σ output HDMI1
workspace τ output HDMI1
workspace υ output HDMI1

# Archived - Old Panel
# -----------------------------------------------------------------------------
# Packages/installiations:
# ~/.config/nil/i3-wsbar, dzen2, perl-ipc-run, perl-try-tiny, perl-anyevent-i3, perl-json-xs
# Archived commands:
# conky | dzen2 -dock -ta c -fg '#000000' -bg '#F0F0F0' -fn 'HelveticaNeueCom 45 Lt-9' &
# exec conky | perl ~/.config/nil/i3-wsbar -c "dzen2 -dock -ta l -fg '#000000' -bg '#F0F0F0' -fn 'HelveticaNeueCom 45 Lt-9'"
#
#
# Things i3bar can't do that dzen2 can:
# Any support whatsoever for conky formatting (e.g. colors, font attributes, icons, etc.).
#   Better-rendered greek symbols, without bold (without unbolding Conky), and/or icon-d workspaces.
# Hover/clickable/keybind-toggle widget displays and icon widgets as your notifications (irssi, gmail, deluge, skype).
#   * Dropdown calendar/clock below timestamp (take one of earsplits calendar widgets and change the mouseover condition to a keybind).
#   * Gmail notifier: Gmail widget icon appearing when I have unread email, with a circled red number appearing in a corner of the icon to represent # of unread, dropdown into a mini-preview of unread mails, and clickable/keybindable 'read/spam/open/reply' on them from there (like with chrome).
bar {
    colors {
    # Silvers and Grays
    #background #F0F0F0
    ##colorclass         border  backgr  text
    #focused_workspace   #DCDCDC #DCDCDC #000000
    #active_workspace    #DCDCDC #DCDCDC #000000
    #inactive_workspace  #F0F0F0 #F0F0F0 #000000
    #urgent_workspace    #2f343a #900000 #ffffff

    # White on Black Scheme
    #background #000000
    #colorclass         border  backgr  text
    #focused_workspace   #ffffff #ffffff #000000
    #active_workspace    #ffffff #ffffff #000000
    #inactive_workspace  #000000 #000000 #ffffff
    #urgent_workspace    #2f343a #900000 #ffffff

    # Black on White/Gray Scheme
    background #ffffff
    #colorclass         border  backgr  text
    focused_workspace   #DCDCDC #DCDCDC #000000
    active_workspace    #DCDCDC #DCDCDC #000000
    inactive_workspace  #ffffff #ffffff #000000
    urgent_workspace    #2f343a #900000 #ffffff
    }
    position top
    font pango:HelveticaNeueCom 45 Lt Bold 9
    tray_output none
    colors { statusline #000000 }
    #status_command conky
}
# }}}
# Application Settings {{{
# -----------------------------------------------------------------------------

# Force floating on all pop-up windows, e.g., browser pop-ups.
for_window [window_role="pop-up"] floating enable
# Force specifically some Firefox windows.
for_window [title="^Library$"] floating enable
for_window [title="^Firefox Preferences$"] floating enable
for_window [title="^Options for Menu Editor$"] floating enable
for_window [title="^Tab Mix Plus Options$"] floating enable

# Assign application to workspace on startup.
assign [class="^URxvt$" instance="^nil$"] λ
assign [class="^URxvt$" instance="^irssi$"] λ
assign [class="^URxvt$" instance="^ncmpcpp$"] λ
assign [class="^URxvt$" instance="^ranger$"] α
assign [class="^URxvt$" instance="^tcli$"] α
assign [class="^mpv$"] λ
assign [class="^Zathura$"] λ
assign [class="^libreoffice-calc$"] γ
assign [class="^Gimp$"] δ

# Float, focus, and position application on startup.
for_window [class="^URxvt$" instance="^nil$"] floating enable,focus,move down 368px,move right 520px
for_window [class="^URxvt$" instance="^irssi$"] floating enable,focus,move up 315px,move right 520px
for_window [class="^URxvt$" instance="^ncmpcpp$"] floating enable,focus,move down 54px,move right 520px
for_window [class="^URxvt$" instance="^ranger$"] floating enable,focus,move up 190px,move right 370px
for_window [class="^URxvt$" instance="^tcli$"] floating enable,focus,move down 190px,move right 370px
for_window [class="^mpv$"] floating enable,focus,focus,move left 415px
for_window [class="^Zathura$"] floating enable,focus,move left 450px
for_window [class="^Gvim$"] floating enable,focus,move left 322px

# Shortcut Application focusing.
bindsym $mod+t [class="^URxvt$" instance="^nil$"] focus
bindsym $mod+i [class="^URxvt$" instance="^irssi$"] focus
bindsym $mod+n [class="^URxvt$" instance="^ncmpcpp$"] focus
bindsym $mod+f [class="^URxvt$" instance="^ranger$"] focus
bindsym $mod+a [class="^URxvt$" instance="^tcli$"] focus
bindsym $mod+m [class="^mpv$"] focus
bindsym $mod+z [class="^Zathura$"] focus
bindsym $mod+w [class="^Gvim$"] focus
bindsym $mod+q [class="^Firefox$"] focus
bindsym $mod+Shift+i exec echo >> ~/.irssi/logs/fnotify

# Shortcut Applications.
# $mod,$mod+y,b and RHS-side are available, as well as all mod2 (super), and optional "modal" keys like resize.
bindsym $mod2+Return exec urxvt
bindsym $mod2+t exec urxvt -name nil -g 85x24 &
bindsym $mod2+i exec urxvt -name irssi -g 124x33 -e irssi &
bindsym $mod2+n exec urxvt -name ncmpcpp -g 95x25 -e ncmpcpp &
bindsym $mod2+f exec urxvt -name ranger -g 90x27 -e ranger &
bindsym $mod2+a exec urxvt -name tcli -g 90x27 -e ~/.config/nil/nil-transmission-remote-cli &
bindsym $mod2+w exec gvim
bindsym $mod2+q exec firefox

# Archived
#for_window [class="^URxvt$" instance="^vim$"] floating enable,focus,move left 322px
#bindsym $mod+w [class="^URxvt$" instance="^vim$"] focus
#bindsym $mod2+w exec urxvt -name vim -g 110x63 &

# A desultory, haphazard method for a calendar "dropdown" (which actually works quite well).
# Problems: No dropdown animation. No click/hoverable feature. No click/keybinds to move to different months.
for_window [class="^URxvt$" instance="^calendar$"] floating enable move up 322px
bindsym $mod+c exec bash ~/.config/nil/calendar-toggle

# Media Keys.
bindsym F6 exec bash ~/.config/nil/play-pause
# Here's the thing: PCM affects HDMI, Master affects Analog. Neither volume affects the other, so I normalized with percentages instead of decibels so they reach 0-100 at the same intervals. So I'll just go with both 0's as consistency for now.
# Wishlist: Switch audios on hotplug without requiring restart applications, and distinct volumes on each, whilst still allowing for just three buttons (a pulseaudio solution).
bindsym F9 exec amixer set Master 2%- unmute | amixer set PCM 2%- unmute
bindsym F10 exec amixer set Master 2%+ unmute | amixer set PCM 2%+ unmute
bindsym F11 exec amixer set Master toggle | amixer set IEC958 toggle

# }}}
# Archive - On Scratchpads {{{
# -----------------------------------------------------------------------------
# These are applications I always leave running on my computer, and for which I only need to take a quick peek once in a while to do something on them. They also generally feel much nicer to use in compact floating windows, rather than the pervasive array of space if you just place them into their own workspace (which somehow makes me feel even less productive).
# To use multiple scratchpads, there's sort of a trick required in i3, since once you show two open scratchpad applications simultaneously, all hell breaks loose. To get around this without requiring more keybindings, you need to make your commands leave all other applications hidden in the scratchpad /before/ you show your next scratchpad application. There's yet another caveat: to use the for_window command to automove applications into the scratchpad, you have to be super-specific so that not even its child popup windows will be subsumed under the scratchpad (e.g. settings windows).

#for_window [class="^URxvt$" instance="^irssi$"] move scratchpad
#for_window [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad
#for_window [class="^URxvt$" instance="^tcli$"] move scratchpad
#for_window [class="^URxvt$" instance="^nil$"] move scratchpad

#bindsym $mod+i [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^tcli$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^irssi$"] scratchpad show
#bindsym $mod+m [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^tcli$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] scratchpad show
#bindsym $mod+a [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^nil$"] move scratchpad, [class="^URxvt$" instance="^tcli$"] scratchpad show
#bindsym $mod+t [class="^URxvt$" instance="^irssi$"] move scratchpad, [class="^URxvt$" instance="^ncmpcpp$"] move scratchpad, [class="^URxvt$" instance="^tcli$"] move scratchpad, [instance="^nil$"] scratchpad show

# I decided to go full ricer and just leave the windows up on different workspaces, usually on my second monitor. Hence I only need to focus on them, as I no longer use a scratchpad. Scratchpads are good if you're limited on space (I am not), and I never liked the idea of having truly hidden applications until a keybind. Just feels weird when you want to poweroff, and you want to ensure that all main applications are closed beforehand.

# vim:filetype=i3
# }}}

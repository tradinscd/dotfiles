#
# rTorrent dotfile
# ~/.rtorrent.rc
# Name: nil
#

# To-DO:
# * Set notification system to a certain directory so that it pings to dzen2 like irssi does.
# Ability to set file priorities under subfiles.
# Ability to queue up/down torrents.
# Ability to dynamically set max # of torrent downloads.
# Deletion of torrents in interface not working (^D does nothing).
#   Currently working around this by deleting manually.
# How to set rssdler for specific files (e.g. exclude 480/720 on Horrible Subs).
# Auto-set different ratios on BakaBT downloads.
#   Maybe by downloading them all into a different watch directory and changing ratios accordingly? Would have wished for a tracker solution.

# Wishlist:
# Easier way to see/change download directory than ^X, print=$d.get_custom1= and d.set_custom1=.
# Ability to clear console messages (e.g. polling stuff/errors) manually rather than only automatic timeouts.
# Native vi(m) keybindings, e.g., hjkl, gg/G (some patches exist, but minimal support)
# Customizable colors (some patches exist, but minimal support)
# Change interface columns (#, name, size, progress gui (current status, % completed), down speed, up speed, ETA, Seeders, Peers)
# Native notification system a la applet/widgets, not just mail.


# Enable the web interface for web GUI front-ends.
#scgi_port = localhost:5000

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
#max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
#max_peers_seed = 50

# Maximum number of simultanious uploads per torrent.
#max_uploads = 15

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 0
upload_rate = 0

# Enable the default ratio group, then change the ratios.
ratio.enable=
ratio.min.set=0
ratio.max.set=0

# Default directory to save the downloaded torrents.
directory = ~/nil/Media/[Incomplete]

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = ~/.config/nil/rtorrent-session

# Watch a directory for new torrents. Multiple watch directories supported.
# Some notes.
# * You need to escape special characters with \, and a space with \\.
# * Having tried both, apparently [ and \[ both work for a real bracket character.
# * To have spaces in the d.set_custom1 directory, you need to quote the filepath, and escape both the quotes
# and the spaces, e.g., "load_start=/watch/dir/*.torrent,d.set_custom1=\"/dir/with\\ spaces\"".
# * To manually use d.set_custom1 in the client, you require only "\ " instead of "\\ ".
# * If the file path doesn't exist (e.g. Ext HD not mounted) during torrent startup, then
# it will error and not move until you manually start the torrent (and optionally d.set_custom1 again),
# since it can't d.set_custom1. If the file path doesn't exist when the torrent finishes, it will
# error but keep the finished files in the incomplete folder.
schedule = watch_directory_1,10,10,"load_start=~/Dropbox/rtorrent/*.torrent,d.set_custom1=~/nil/Media"
schedule = watch_directory_2,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ Anime/*.torrent,d.set_custom1=/mnt/ext/Media/Anime/\[Backlog\]"
schedule = watch_directory_3,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ Anime\\ -\\ Spring\\ 2013/*.torrent,d.set_custom1=\"/mnt/ext/Media/Anime/\[Backlog\]/\[Spring\\ 2013\]\""
schedule = watch_directory_4,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ Film/*.torrent,d.set_custom1=/mnt/ext/Media/Film/\[Backlog\]"
schedule = watch_directory_5,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ Manga/*.torrent,d.set_custom1=/mnt/ext/Media/Manga/\[Backlog\]"
schedule = watch_directory_6,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ TV/*.torrent,d.set_custom1=/mnt/ext/Media/TV/\[Backlog\]"
schedule = watch_directory_7,10,10,"load_start=~/Dropbox/rtorrent/\[Ext\]\\ Visual\\ Novel/*.torrent,d.set_custom1=\"/mnt/ext/Media/Visual\\ Novel/\[Backlog\]\""
schedule = watch_directory_8,10,10,"load_start=~/Dropbox/rtorrent/Music/*.torrent,d.set_custom1=~/nil/Media/Music"

# On completion, move the torrent to the directory from custom1.
system.method.set_key =event.download.finished,move_complete,"d.set_directory=$d.get_custom1= ;execute=mv,-u,$d.get_base_path=,$d.get_custom1="

# Move .torrent to ~/.trash after loading it into session.
# Supposedly not supposed to work with watchdir, but I assume that's for cases
# when you want rtorrent to do things depending on what happens to the *.torrent.
system.method.set_key = event.download.inserted_new,move_tor,"execute=mv,-u,$d.get_loaded_file=,~/.trash"

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=100M

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
#port_range = 6890-6999

# Start opening ports at a random position within the port range.
#port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whetever the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
# encryption = allow_incoming,enable_retry,prefer_plaintext

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
#
# dht = auto

# UDP port to use for DHT.
#
# dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#
# peer_exchange = yes

#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10

# vim:filetype=rtorrent
